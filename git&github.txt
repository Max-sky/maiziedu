1.git help --- git help -a

/Users/apple:694$mkdir git-test
/Users/apple:695$cd git-test/
/Users/apple:696$git help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.


2.初始化
/Users/apple:699$git config --global user.name 'hugh MBP'
/Users/apple:700$pwd
/Users/apple/git-test
/Users/apple:701$git config --global user.email 'jonhson_hugh@163.com'
/Users/apple:702$git help config
/Users/apple:703$git config --unset user.name 'hugh RMBP'
/Users/apple:704$git config --list
credential.helper=osxkeychain
filter.lfs.clean=git-lfs clean %f
filter.lfs.smudge=git-lfs smudge %f
filter.lfs.required=true
user.name=hugh MBP
user.email=jonhson_hugh@163.com
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=true

- 可以打开.gitconfig查看配置信息
  1 [filter "lfs"]
  2         clean = git-lfs clean %f
  3         smudge = git-lfs smudge %f
  4         required = true
  5 [user]
  6         name = hugh MBP
  7         email = jonhson_hugh@163.com

/Users/apple:712$cd git-test/
/Users/apple:713$git init
Initialized empty Git repository in /Users/apple/git-test/.git/
/Users/apple:714$ls
/Users/apple:715$la
.   ..  .git
/Users/apple:716$ll
/Users/apple:717$cd .git
/Users/apple:718$ls
HEAD        branches    config      description hooks       info        objects     refs

3.版本库-暂存区：git add
版本库-分支: git commit

On branch master

Initial commit

nothing to commit (create/copy files and use "git add" to track)
/Users/apple:724$git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

    index.html

nothing added to commit but untracked files present (use "git add" to track)
/Users/apple:725$git add index.html
/Users/apple:726$git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

    new file:   index.html

/Users/apple:727$git commit
error: There was a problem with the editor 'vi'.
Please supply the message using either -m or -F option.
/Users/apple:728$git commit -am"add index.html"
[master (root-commit) f5fee62] add index.html
 1 file changed, 1 insertion(+)
 create mode 100644 index.html
/Users/apple:729$git status
On branch master
nothing to commit, working directory clean

4. git log
/Users/apple:734$git log --oneline
f5fee62 add index.html
/Users/apple:735$git log --decorate
commit f5fee62a242f0ea4d36dcc6d3dde40040ee9c072 (HEAD -> master)
Author: hugh MBP <jonhson_hugh@163.com>
Date:   Fri Jun 17 00:36:28 2016 +0800

    add index.html
/Users/apple:736$git log --all
commit f5fee62a242f0ea4d36dcc6d3dde40040ee9c072
Author: hugh MBP <jonhson_hugh@163.com>
Date:   Fri Jun 17 00:36:28 2016 +0800

    add index.html


4. git rm ，git mv 修改暂存区记录（还未提交）
  git rm -f 同时从本地和缓存区删除

5. git revert/reset
HEAD：一个游标，指向最后一次提交
git revert HEAD 回撤当前版本（排第一）
git revert HEAD^^回撤到上两个版本（排第三）
git revert HEAD~100回撤到上100个版本








